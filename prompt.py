class prompt_manager:
    def __init__(self):
        self.schema_prompt = """
            Please create a schema_info based on the information displayed in the first 5 rows of a dataframe. Schema_info is a JSON, here is an example:
            ########################
            dataframe's first 5 rows:
                    Customer ID  Age  Gender Marital Status    Education Level
            0        84966   23  female        married   associate degree
            1        95568   26    male        widowed          doctorate
            2        10544   29  female         single   associate degree
            3        77033   20    male       divorced  bachelor's degree
            4        88160   25  female      separated  bachelor's degree
            schema_info:
            {{
                'Customer ID': {{'type': 'int', 'description': 'Unique identifier for each customer'}},
                'Age': {{'type': 'int', 'description': 'The age of the customer'}},
                'Gender': {{'type': 'str', 'description': 'The gender of the customer'}},
                'Marital Status': {{'type': 'str', 'description': 'The marital status of the customer'}},
                'Education Level': {{'type': 'str', 'description': 'The highest level of education achieved by the customer'}}
            }}
            ########################
            dataframe's first 5 rows:
            {}
            schema_info:
            """ 
        self.sql_prompt = '''
            You are an sqlalchemy expert. Please generate SQL statements corresponding to the given questions based on the table names and respective columns.
            SQL statements can select data from one or more tables, use join or subquery comparison, etc. SQL statements should not have line breaks. 
            Table names should not have single quotes, for example, df is df.

            Note: Each schema reference should be in single quotes, such as 'schema'.

            Below are the questions and corresponding SQL statement examples:
            ########################
            Question: What is the average income of people with a bachelor's degree?
            SQL statement:  SELECT avg(df.'Income Level') from df where df.'Education Level' like '%bachelor%';
            
            Question: What is the average income in different regions?
            SQL statement: SELECT df.'Geographic Information',avg(df.'Income Level') from df group by df.'Geographic Information';

             Question: How many single people are there?
            SQL statement: SELECT count('Customer ID') from df where df.'Marital Status' like '%single%';;
            ########################
            
            Question: {}
            Table Nameï¼š{}
            schema: {}
            
            SQL statement:  
            '''
        self.prompt_debug = """
            Previous SQL generation statement: {}, encountered an error: {}, please regenerate the SQL statement, the answer should be a pure SQL statement:
            """
        self.prompt_report = '''
            Now there is a list:
            {}
            where the first value is a user's question, the second value is the text-to-SQL generated by the large model, and the third value is the data retrieved based on the SQL. Based on the question and the retrieved data, please create a detailed and clear data analysis report. This report should be logical and well-organized:
            '''
